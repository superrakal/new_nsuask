{
  "name": "active-model-adapter",
  "version": "2.0.3",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ember-data/active-model-adapter.git"
  },
  "description": "The default blueprint for ember-cli addons.",
  "directories": {
    "doc": "doc",
    "test": "tests"
  },
  "scripts": {
    "start": "ember server",
    "build": "ember build",
    "test": "ember try:testall"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "author": "",
  "license": "MIT",
  "devDependencies": {
    "broccoli-asset-rev": "^2.0.2",
    "broccoli-babel-transpiler": "^5.1.1",
    "broccoli-concat": "0.0.13",
    "broccoli-es3-safe-recast": "^2.0.0",
    "broccoli-funnel": "^0.2.3",
    "broccoli-merge-trees": "^0.2.1",
    "broccoli-replace": "^0.3.1",
    "broccoli-stew": "^0.3.2",
    "ember-cli": "^1.13.0",
    "ember-cli-app-version": "0.3.3",
    "ember-cli-content-security-policy": "0.4.0",
    "ember-cli-dependency-checker": "^1.0.0",
    "ember-cli-htmlbars": "0.7.6",
    "ember-cli-inject-live-reload": "^1.3.0",
    "ember-cli-pretender": "0.4.0",
    "ember-cli-qunit": "0.3.13",
    "ember-cli-uglify": "^1.0.1",
    "ember-data": "^2.0.0",
    "ember-disable-prototype-extensions": "^1.0.0",
    "ember-disable-proxy-controllers": "^1.0.0",
    "ember-export-application-global": "^1.0.2",
    "ember-try": "0.0.7",
    "ember-watson": "^0.5.7",
    "github": "^0.2.4",
    "rsvp": "^3.1.0"
  },
  "keywords": [
    "ember-addon"
  ],
  "dependencies": {
    "ember-cli-babel": "^5.0.0"
  },
  "ember-addon": {
    "configPath": "tests/dummy/config"
  },
  "readme": "# Ember Data ActiveModel Adapter [![Build Status](https://travis-ci.org/ember-data/active-model-adapter.svg?branch=master)](https://travis-ci.org/ember-data/active-model-adapter)\n\n## Installation\n\n### Ember CLI\n\n`ember install active-model-adapter`\n\n### Rails\n\nThis gem comes bundled with [Ember\nRails](https://github.com/emberjs/ember-rails). If you want to specify a\nspecific version in your `Gemfile`, you can reference the\n`active-model-adapter-source` gem and it will get loaded by Ember Rails:\n\n```ruby\ngem 'active-model-adapter-source', '~>1.13' # or whatever version you need\n```\n\n### Bower\n\n`bower install --save active-model-adapter`\n\n### Script Tags\n\nGrab a copy of active-model-adapter.js from http://github.com/ember-data/active-model-adapter-dist\n\n## Usage\n\nYou should make an `ApplicationAdapter` if you don't already have one:\n\n```js\n// app/adapters/application.js\nimport ActiveModelAdapter from 'active-model-adapter';\n\nexport default ActiveModelAdapter.extend();\n```\n\nIf you need to subclass the `ActiveModelSerializer`, you can import it\ninto your serializer:\n\n```js\n// app/serializers/post.js\n\nimport { ActiveModelSerializer } from 'active-model-adapter';\n\nexport default ActiveModelSerializer.extend();\n```\n\n## Description\n\nThe ActiveModelAdapter is a subclass of the RESTAdapter designed to integrate\nwith a JSON API that uses an underscored naming convention instead of camelCasing.\n\nIt has been designed to work out of the box with the\n[active\\_model\\_serializers](http://github.com/rails-api/active_model_serializers)\nRuby gem. This Adapter expects specific settings using ActiveModel::Serializers,\n`embed :ids, embed_in_root: true` which sideloads the records.\n\n## JSON Structure\n\nThe ActiveModelAdapter expects the JSON returned from your server to follow\nthe REST adapter conventions substituting underscored keys for camelcased ones.\nUnlike the DS.RESTAdapter, async relationship keys must be the singular form\nof the relationship name, followed by \"_id\" for DS.belongsTo relationships,\nor \"_ids\" for DS.hasMany relationships.\n\n### Conventional Names\n\nAttribute names in your JSON payload should be the underscored versions of\nthe attributes in your Ember.js models.\nFor example, if you have a `Person` model:\n\n```js\n// app/models/famous-person.js\n\nexport default var FamousPerson = DS.Model.extend({\n  firstName: DS.attr('string'),\n  lastName: DS.attr('string'),\n  occupation: DS.attr('string')\n});\n```\n\nThe JSON returned should look like this:\n\n```js\n{\n  \"famous_person\": {\n    \"id\": 1,\n    \"first_name\": \"Barack\",\n    \"last_name\": \"Obama\",\n    \"occupation\": \"President\"\n  }\n}\n```\n\nLet's imagine that `Occupation`  and `Person` are just another model:\n\n```js\n// app/models/person.js\n\nexport default var Person = DS.Model.extend({\n  firstName: DS.attr('string'),\n  lastName: DS.attr('string'),\n  occupation: DS.belongsTo('occupation')\n});\n\n// app/models/occupation\nApp.Occupation = DS.Model.extend({\n  name: DS.attr('string'),\n  salary: DS.attr('number'),\n  people: DS.hasMany('person')\n});\n```\n\nThe JSON needed to avoid extra server calls, should look like this:\n\n```js\n{\n  \"people\": [{\n    \"id\": 1,\n    \"first_name\": \"Barack\",\n    \"last_name\": \"Obama\",\n    \"occupation_id\": 1\n  }],\n  \"occupations\": [{\n    \"id\": 1,\n    \"name\": \"President\",\n    \"salary\": 100000,\n    \"person_ids\": [1]\n  }]\n}\n```\n\n## Development Installation\n\n* `git clone` this repository\n* `npm install`\n* `bower install`\n\n## Running Tests\n\n* `ember test`\n* `ember test --server`\n\n## Building\n\n* `ember build`\n\nFor more information on using ember-cli, visit [http://www.ember-cli.com/](http://www.ember-cli.com/).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ember-data/active-model-adapter/issues"
  },
  "homepage": "https://github.com/ember-data/active-model-adapter#readme",
  "_id": "active-model-adapter@2.0.3",
  "_from": "active-model-adapter@*"
}
