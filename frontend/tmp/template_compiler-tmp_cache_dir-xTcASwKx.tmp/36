export default Ember.HTMLBars.template((function() {
  var child0 = (function() {
    return {
      meta: {
        "revision": "Ember@1.13.11",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 243
          },
          "end": {
            "line": 1,
            "column": 449
          }
        },
        "moduleName": "frontend/templates/messages/overhear/index.hbs"
      },
      arity: 1,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1,"class","ask-message");
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","message-header");
        var el3 = dom.createElement("i");
        dom.setAttribute(el3,"class","fa fa-calendar");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2,"class","message-content");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(element0, [0]),1,1);
        morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);
        return morphs;
      },
      statements: [
        ["content","message.formatted_created_at",["loc",[null,[1,354],[1,386]]]],
        ["content","message.text",["loc",[null,[1,421],[1,437]]]]
      ],
      locals: ["message"],
      templates: []
    };
  }());
  return {
    meta: {
      "revision": "Ember@1.13.11",
      "loc": {
        "source": null,
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 464
        }
      },
      "moduleName": "frontend/templates/messages/overhear/index.hbs"
    },
    arity: 0,
    cachedFragment: null,
    hasRendered: false,
    buildFragment: function buildFragment(dom) {
      var el0 = dom.createDocumentFragment();
      var el1 = dom.createElement("div");
      dom.setAttribute(el1,"class","page-head");
      var el2 = dom.createElement("div");
      dom.setAttribute(el2,"class","col-lg-2 col-md-3 col-sm-6 col-xs-12 text-center");
      var el3 = dom.createElement("div");
      dom.setAttribute(el3,"class","public-logo overhear");
      dom.appendChild(el2, el3);
      dom.appendChild(el1, el2);
      var el2 = dom.createElement("div");
      dom.setAttribute(el2,"class","col-lg-10 col-md-9 col-sm-6 hidden-xs");
      var el3 = dom.createElement("h1");
      var el4 = dom.createTextNode("Подслушано НГУ");
      dom.appendChild(el3, el4);
      dom.appendChild(el2, el3);
      dom.appendChild(el1, el2);
      dom.appendChild(el0, el1);
      var el1 = dom.createElement("div");
      dom.setAttribute(el1,"class","page-content");
      var el2 = dom.createComment("");
      dom.appendChild(el1, el2);
      dom.appendChild(el0, el1);
      return el0;
    },
    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
      var morphs = new Array(1);
      morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);
      return morphs;
    },
    statements: [
      ["block","each",[["get","model",["loc",[null,[1,251],[1,256]]]]],[],0,null,["loc",[null,[1,243],[1,458]]]]
    ],
    locals: [],
    templates: [child0]
  };
}()));